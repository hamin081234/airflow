[2024-11-04T05:15:56.075+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-11-04T05:15:56.094+0000] {taskinstance.py:2612} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: stock-market-summary.exchange_rate manual__2024-11-04T05:15:45.761900+00:00 [queued]>
[2024-11-04T05:15:56.102+0000] {taskinstance.py:2612} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: stock-market-summary.exchange_rate manual__2024-11-04T05:15:45.761900+00:00 [queued]>
[2024-11-04T05:15:56.103+0000] {taskinstance.py:2865} INFO - Starting attempt 1 of 1
[2024-11-04T05:15:56.119+0000] {taskinstance.py:2888} INFO - Executing <Task(PythonOperator): exchange_rate> on 2024-11-04 05:15:45.761900+00:00
[2024-11-04T05:15:56.128+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=3454) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-11-04T05:15:56.129+0000] {standard_task_runner.py:72} INFO - Started process 3460 to run task
[2024-11-04T05:15:56.129+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'stock-market-summary', 'exchange_rate', 'manual__2024-11-04T05:15:45.761900+00:00', '--job-id', '257', '--raw', '--subdir', 'DAGS_FOLDER/stock_market_summary.py', '--cfg-path', '/tmp/tmpgmld2trk']
[2024-11-04T05:15:56.131+0000] {standard_task_runner.py:105} INFO - Job 257: Subtask exchange_rate
[2024-11-04T05:15:56.171+0000] {task_command.py:467} INFO - Running <TaskInstance: stock-market-summary.exchange_rate manual__2024-11-04T05:15:45.761900+00:00 [running]> on host 5a41fc77ef88
[2024-11-04T05:15:56.256+0000] {taskinstance.py:3131} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='stock-market-summary' AIRFLOW_CTX_TASK_ID='exchange_rate' AIRFLOW_CTX_EXECUTION_DATE='2024-11-04T05:15:45.761900+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-11-04T05:15:45.761900+00:00'
[2024-11-04T05:15:56.259+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-11-04T05:15:57.096+0000] {warnings.py:112} WARNING - /opt/***/dags/stock_market_summary.py:148: GuessedAtParserWarning: No parser was explicitly specified, so I'm using the best available HTML parser for this system ("lxml"). This usually isn't a problem, but if you run this code on another system, or in a different virtual environment, it may use a different parser and behave differently.

The code that caused this warning is on line 148 of the file /opt/***/dags/stock_market_summary.py. To get rid of this warning, pass the additional argument 'features="lxml"' to the BeautifulSoup constructor.

  soup = BeautifulSoup(req_obj.content)

[2024-11-04T05:15:57.907+0000] {logging_mixin.py:190} INFO - ##################################################
[2024-11-04T05:15:57.908+0000] {logging_mixin.py:190} INFO - {'url': 'https://www.google.com/finance/quote/USD-KRW', 'From': 'USD', 'To': 'KRW', 'Exchange Rate': 1369.8692, 'Time': '2024-11-04 14:15:57'}
[2024-11-04T05:15:57.909+0000] {logging_mixin.py:190} INFO - ##################################################
[2024-11-04T05:15:57.909+0000] {python.py:240} INFO - Done. Returned value was: {'currency_info': {'url': 'https://www.google.com/finance/quote/USD-KRW', 'From': 'USD', 'To': 'KRW', 'Exchange Rate': 1369.8692, 'Time': '2024-11-04 14:15:57'}, 'stock_list': [{'code': 'TSLA', 'name_en': 'Tesla', 'name_kr': '테슬라', 'stock_index': 'NASDAQ', 'stock_price': 248.98, 'stock_info': {'url': 'https://www.google.com/finance/quote/TSLA:NASDAQ', 'stock_name': 'TSLA', 'stock_price': 248.98, 'currency': '$'}, 'to_won': 341070.033416}, {'code': 'AAPL', 'name_en': 'Apple', 'name_kr': '애플', 'stock_index': 'NASDAQ', 'stock_price': 222.91, 'stock_info': {'url': 'https://www.google.com/finance/quote/AAPL:NASDAQ', 'stock_name': 'AAPL', 'stock_price': 222.91, 'currency': '$'}, 'to_won': 305357.54337200004}, {'code': 'NVDA', 'name_en': 'NVidia', 'name_kr': '엔비디아', 'stock_index': 'NASDAQ', 'stock_price': 135.37, 'stock_info': {'url': 'https://www.google.com/finance/quote/NVDA:NASDAQ', 'stock_name': 'NVDA', 'stock_price': 135.37, 'currency': '$'}, 'to_won': 185439.19360400003}, {'code': 'MSFT', 'name_en': 'Microsoft', 'name_kr': '마이크로소프트', 'stock_index': 'NASDAQ', 'stock_price': 410.37, 'stock_info': {'url': 'https://www.google.com/finance/quote/MSFT:NASDAQ', 'stock_name': 'MSFT', 'stock_price': 410.37, 'currency': '$'}, 'to_won': 562153.223604}]}
[2024-11-04T05:15:57.939+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-11-04T05:15:57.939+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=stock-market-summary, task_id=exchange_rate, run_id=manual__2024-11-04T05:15:45.761900+00:00, execution_date=20241104T051545, start_date=20241104T051556, end_date=20241104T051557
[2024-11-04T05:15:57.991+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-11-04T05:15:58.014+0000] {taskinstance.py:3900} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2024-11-04T05:15:58.017+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
